{:paths ["src"
         "resources"
         "target/webly"]

 :deps {org.clojure/clojure    {:mvn/version "1.11.1"}
        org.pinkgorilla/webly {:mvn/version "0.5.655"}
        org.pinkgorilla/ui-tailwind {:mvn/version "0.0.5"}
        org.pinkgorilla/oauth2 {:local/root "../" :deps/manifest :deps}
        }


 :aliases {:webly {:exec-fn webly.app.app/webly-build
                   :exec-args {:config [{}]
                               :profile "npm-install"}}
           
           :npm-install {:exec-args {:profile "npm-install"}}
           :compile {:exec-args {:profile "compile2"}}
           :release {:exec-args {:profile "release"}}
           :release-adv {:exec-args {:profile "release-adv"}}
           :static {:exec-args {:profile "static"}}
           :ci {:exec-args {:profile "ci"}}
                      
           :run {:exec-fn modular.system/start!
                 :exec-args {:profile "jetty"
                              :config ["oauth2/config.edn" ; oauth2 endpoints
                                       "demo-config.edn"
                                       "/home/florian/repo/myLinux/myvault/goldly/oauth2-localhost.edn" ; oauth2 secrets
                                      ]
                             :services "demo-services.edn"}}

           ;; token info
           :token-info-xero {:exec-args {:run demo.token/token-info
                                         :provider :xero}}

           :token-info-google {:exec-args {:run demo.token/token-info
                                           :provider :google}}

           :token-info-github {:exec-args {:run demo.token/token-info
                                           :provider :github}}

           :tokens-summary {:exec-fn demo.token/tokens-summary
                            :exec-args {:providers [:xero :github :google
                                                     ; :wonderland ; to test non existent tokens
                                                    ]}}

           ; token refresh
           :token-refresh-xero {:exec-fn demo.token-refresh/refresh-token-xero}

           ; clj

           :password
           {:exec-fn demo.password/password
            :exec-args {:password "1234"}}}

;
 }