{:name "oauth2"
 ; build
 :lazy false
 :cljs-namespace [token.oauth2.store.ui
                  token.identity.user
                  token.identity.ui
                  ]
 :cljs-ns-bindings {; make sure the namespaces in sci and cljs are identical
                    token.oauth2.store.ui {'provider-status-grid token.oauth2.store.ui/provider-status-grid} 
                    token.identity.user {'get-user token.identity.user/get-user
                                         'set-user! token.identity.user/set-user!
                                         'init-user! token.identity.user/init-user!}
                    token.identity.ui {'user-icon-with-login token.identity.ui/user-icon-with-login
                                       'show-login-dialog  token.identity.ui/show-login-dialog}}
 ; run 
 :api-routes {; oauth redirect is stateless,
              ; all other endpoints are implemented via clj-service which can be started at runtime 
              ; if the service gets started.
              "oauth2/" {;["start/" :provider] {:get modular.oauth2.handler/handler-oauth2-start-wrapped}
                         ;"token"  {:get modular.oauth2.handler/token-handler-wrapped}
                             ;  ["redirect/" :provider] {:get :oauth2/redirect}
                         ;"save-token" {:post modular.oauth2.handler/handler-oauth2-save-wrapped}
                         ["redirect/" :provider] token.oauth2.handler/handler-oauth2-redirect-wrapped  ;  either client OR server side
                         }}

:cljs-service {;:config-fn webly.spa.service/cljs-config-simple
               :start-fn token.identity.user/init-user!
               :default-config {}}


 }

